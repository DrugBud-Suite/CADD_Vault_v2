var s=Object.defineProperty;var o=(e,t,r)=>t in e?s(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var g=(e,t,r)=>o(e,typeof t!="symbol"?t+"":t,r);import{a2 as n}from"./index-BKVsvMUI.js";class h{static async getPackageRatingStats(t){try{const{data:r,error:a}=await n.rpc("get_package_rating_stats",{package_uuid:t});if(a)throw a;return r&&r.length>0?{average_rating:Number(r[0].average_rating)||0,ratings_count:Number(r[0].ratings_count)||0}:{average_rating:0,ratings_count:0}}catch(r){throw console.error("Error fetching package rating stats:",r),r}}static async getUserRating(t){try{const{data:r,error:a}=await n.rpc("get_user_rating",{package_uuid:t});if(a)throw a;return r&&r.length>0?{rating:r[0].rating,rating_id:r[0].rating_id}:null}catch(r){throw console.error("Error fetching user rating:",r),r}}static async upsertRating(t,r){try{const{data:a,error:i}=await n.rpc("upsert_rating",{package_uuid:t,new_rating:r});if(i)throw i;if(a&&a.length>0)return{average_rating:Number(a[0].average_rating)||0,ratings_count:Number(a[0].ratings_count)||0,user_rating:a[0].user_rating,rating_id:a[0].rating_id};throw new Error("No data returned from upsert operation")}catch(a){throw console.error("Error upserting rating:",a),a}}static async deleteRating(t){try{const{data:r,error:a}=await n.rpc("delete_user_rating",{package_uuid:t});if(a)throw a;return r&&r.length>0?{average_rating:Number(r[0].average_rating)||0,ratings_count:Number(r[0].ratings_count)||0}:{average_rating:0,ratings_count:0}}catch(r){throw console.error("Error deleting rating:",r),r}}}class c{static subscribe(t){return this.listeners.add(t),()=>{this.listeners.delete(t)}}static emit(t){this.listeners.forEach(r=>{try{r(t)}catch(a){console.error("Error in rating event listener:",a)}})}}g(c,"listeners",new Set);export{c as R,h as a};
